/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package javaapplication2;

import java.io.*;
import java.util.Arrays;
import java.util.Scanner;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import javax.swing.ListModel;

/**
 *
 * @author Mahesh Patade, Karuna Karpe, Kumar Mashalkar
 */
public class Javaapplication2 extends javax.swing.JFrame {

    /**
     * Creates new form Javaapplication2
     */
    public Javaapplication2() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        bindingGroup = new org.jdesktop.beansbinding.BindingGroup();

        buttonGroup1 = new javax.swing.ButtonGroup();
        AllTabs = new javax.swing.JTabbedPane();
        Tab1Panel = new javax.swing.JPanel();
        Tab1PanelInside = new javax.swing.JPanel();
        Tab1LabelService = new javax.swing.JLabel();
        Tab1WhnBooting = new javax.swing.JRadioButton();
        Tab1Manually = new javax.swing.JRadioButton();
        Tab1LabelName = new javax.swing.JLabel();
        Tab1InitiatorName = new javax.swing.JTextField();
        Tab2DiscTargets = new javax.swing.JPanel();
        Tab2InsidePanel = new javax.swing.JPanel();
        Tab2IPLabel = new javax.swing.JLabel();
        Tab2ServerIP = new javax.swing.JTextField();
        Tab2Discover = new javax.swing.JButton();
        Tab2Port = new javax.swing.JTextField();
        Tab2PortLabel = new javax.swing.JLabel();
        jPasswordField1 = new javax.swing.JPasswordField();
        jTextField1 = new javax.swing.JTextField();
        jCheckBox1 = new javax.swing.JCheckBox();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        Tab3Panel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        Tab3ListTargets = new javax.swing.JList();
        Tab3DeleteTargets = new javax.swing.JButton();
        Tab3LabelList = new javax.swing.JLabel();
        Tab1Cancel = new javax.swing.JButton();
        Tab1OK = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("iSCSI Initiator");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));

        Tab1Panel.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                Tab1PanelComponentAdded(evt);
            }
        });

        Tab1PanelInside.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Initiator Details", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 12))); // NOI18N

        Tab1LabelService.setText("Service Start");

        buttonGroup1.add(Tab1WhnBooting);
        Tab1WhnBooting.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        Tab1WhnBooting.setSelected(true);
        Tab1WhnBooting.setText("When Booting");

        buttonGroup1.add(Tab1Manually);
        Tab1Manually.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        Tab1Manually.setText("Manually");

        Tab1LabelName.setText("Initiator Name");

        Tab1InitiatorName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tab1InitiatorNameActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout Tab1PanelInsideLayout = new javax.swing.GroupLayout(Tab1PanelInside);
        Tab1PanelInside.setLayout(Tab1PanelInsideLayout);
        Tab1PanelInsideLayout.setHorizontalGroup(
            Tab1PanelInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tab1PanelInsideLayout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(Tab1PanelInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Tab1LabelName)
                    .addComponent(Tab1LabelService)
                    .addComponent(Tab1WhnBooting)
                    .addComponent(Tab1Manually)
                    .addComponent(Tab1InitiatorName, javax.swing.GroupLayout.PREFERRED_SIZE, 359, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(68, Short.MAX_VALUE))
        );
        Tab1PanelInsideLayout.setVerticalGroup(
            Tab1PanelInsideLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tab1PanelInsideLayout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(Tab1LabelService)
                .addGap(18, 18, 18)
                .addComponent(Tab1WhnBooting)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Tab1Manually)
                .addGap(26, 26, 26)
                .addComponent(Tab1LabelName)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Tab1InitiatorName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(43, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout Tab1PanelLayout = new javax.swing.GroupLayout(Tab1Panel);
        Tab1Panel.setLayout(Tab1PanelLayout);
        Tab1PanelLayout.setHorizontalGroup(
            Tab1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tab1PanelLayout.createSequentialGroup()
                .addGap(83, 83, 83)
                .addComponent(Tab1PanelInside, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(88, Short.MAX_VALUE))
        );
        Tab1PanelLayout.setVerticalGroup(
            Tab1PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tab1PanelLayout.createSequentialGroup()
                .addGap(72, 72, 72)
                .addComponent(Tab1PanelInside, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        AllTabs.addTab("Service", Tab1Panel);

        Tab2InsidePanel.setBorder(javax.swing.BorderFactory.createTitledBorder(javax.swing.BorderFactory.createEtchedBorder(), "Discover Server", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.TOP, new java.awt.Font("Dialog", 0, 12), new java.awt.Color(0, 0, 0))); // NOI18N

        Tab2IPLabel.setText("iSCSI Server IP");

        Tab2ServerIP.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                Tab2ServerIPKeyPressed(evt);
            }
        });

        Tab2Discover.setText("Discover");
        Tab2Discover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tab2DiscoverActionPerformed(evt);
            }
        });

        Tab2Port.setEditable(false);
        Tab2Port.setText("3260");

        Tab2PortLabel.setText("Server Port");

        jPasswordField1.setEnabled(false);

        jTextField1.setEnabled(false);

        jCheckBox1.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        jCheckBox1.setText("Enable Authentication");
        jCheckBox1.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                jCheckBox1StateChanged(evt);
            }
        });

        jLabel1.setText("Username");
        jLabel1.setEnabled(false);

        jLabel2.setText("Password");
        jLabel2.setEnabled(false);

        javax.swing.GroupLayout Tab2InsidePanelLayout = new javax.swing.GroupLayout(Tab2InsidePanel);
        Tab2InsidePanel.setLayout(Tab2InsidePanelLayout);
        Tab2InsidePanelLayout.setHorizontalGroup(
            Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tab2InsidePanelLayout.createSequentialGroup()
                .addGap(65, 65, 65)
                .addGroup(Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addGroup(Tab2InsidePanelLayout.createSequentialGroup()
                        .addGroup(Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(Tab2ServerIP, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Tab2IPLabel))
                        .addGap(18, 18, 18)
                        .addGroup(Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(Tab2PortLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(Tab2Port, javax.swing.GroupLayout.PREFERRED_SIZE, 55, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(Tab2Discover)
                    .addGroup(Tab2InsidePanelLayout.createSequentialGroup()
                        .addGroup(Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, 122, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(18, 18, 18)
                        .addGroup(Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))))
                .addContainerGap(85, Short.MAX_VALUE))
        );
        Tab2InsidePanelLayout.setVerticalGroup(
            Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tab2InsidePanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Tab2IPLabel, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(Tab2PortLabel, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tab2ServerIP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Tab2Port, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jCheckBox1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 5, Short.MAX_VALUE)
                .addGroup(Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(Tab2InsidePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jPasswordField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(32, 32, 32)
                .addComponent(Tab2Discover)
                .addGap(21, 21, 21))
        );

        javax.swing.GroupLayout Tab2DiscTargetsLayout = new javax.swing.GroupLayout(Tab2DiscTargets);
        Tab2DiscTargets.setLayout(Tab2DiscTargetsLayout);
        Tab2DiscTargetsLayout.setHorizontalGroup(
            Tab2DiscTargetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tab2DiscTargetsLayout.createSequentialGroup()
                .addGap(87, 87, 87)
                .addComponent(Tab2InsidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(102, Short.MAX_VALUE))
        );
        Tab2DiscTargetsLayout.setVerticalGroup(
            Tab2DiscTargetsLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tab2DiscTargetsLayout.createSequentialGroup()
                .addGap(64, 64, 64)
                .addComponent(Tab2InsidePanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(66, Short.MAX_VALUE))
        );

        AllTabs.addTab("Discover Targets", Tab2DiscTargets);

        Tab3Panel.addContainerListener(new java.awt.event.ContainerAdapter() {
            public void componentAdded(java.awt.event.ContainerEvent evt) {
                Tab3PanelComponentAdded(evt);
            }
        });

        Tab3ListTargets.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);

        org.jdesktop.beansbinding.Binding binding = org.jdesktop.beansbinding.Bindings.createAutoBinding(org.jdesktop.beansbinding.AutoBinding.UpdateStrategy.READ_WRITE, Tab1InitiatorName, org.jdesktop.beansbinding.ObjectProperty.create(), Tab3ListTargets, org.jdesktop.beansbinding.BeanProperty.create("elements"));
        bindingGroup.addBinding(binding);

        Tab3ListTargets.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                Tab3ListTargetsMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(Tab3ListTargets);

        Tab3DeleteTargets.setText("Delete");
        Tab3DeleteTargets.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tab3DeleteTargetsActionPerformed(evt);
            }
        });

        Tab3LabelList.setFont(new java.awt.Font("Dialog", 0, 12)); // NOI18N
        Tab3LabelList.setText("Discovered Targets");

        javax.swing.GroupLayout Tab3PanelLayout = new javax.swing.GroupLayout(Tab3Panel);
        Tab3Panel.setLayout(Tab3PanelLayout);
        Tab3PanelLayout.setHorizontalGroup(
            Tab3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tab3PanelLayout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(Tab3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(Tab3LabelList)
                    .addComponent(Tab3DeleteTargets)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 605, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(26, Short.MAX_VALUE))
        );
        Tab3PanelLayout.setVerticalGroup(
            Tab3PanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(Tab3PanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Tab3LabelList)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 316, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Tab3DeleteTargets)
                .addGap(59, 59, 59))
        );

        AllTabs.addTab("Manage Targets", Tab3Panel);

        Tab1Cancel.setText("Cancel");
        Tab1Cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tab1CancelActionPerformed(evt);
            }
        });

        Tab1OK.setText("OK");
        Tab1OK.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Tab1OKActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(AllTabs, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(Tab1Cancel)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(Tab1OK, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(AllTabs, javax.swing.GroupLayout.PREFERRED_SIZE, 419, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Tab1Cancel)
                    .addComponent(Tab1OK))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        bindingGroup.bind();

        pack();
    }// </editor-fold>//GEN-END:initComponents

    public void loadlist() {
        try {
            String[] cmm = {"/bin/sh", "-c", "iscsiadm -m node"};
            Process t = Runtime.getRuntime().exec(cmm);
            BufferedReader stdcmmIn = new BufferedReader(new InputStreamReader(t.getInputStream()));
            String s = "";

            DefaultListModel listmodel1 = new DefaultListModel();
            while ((s = stdcmmIn.readLine()) != null) {
                listmodel1.addElement(s);
            }

            Tab3ListTargets.removeAll();
            Tab3ListTargets.setModel(listmodel1);
        } catch (IOException ex) {
            Logger.getLogger(Javaapplication2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    private void Tab1CancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tab1CancelActionPerformed
        System.exit(WIDTH);
    }//GEN-LAST:event_Tab1CancelActionPerformed
    public String index;
    public String delflag = null;

    private void Tab1OKActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tab1OKActionPerformed
        try {

            if (Tab1WhnBooting.isSelected() == true) {
                String[] cmd = {"/bin/sh", "-c", "cd /etc/iscsi/ ; sed -i 's/node.startup = manual/node.startup = automatic/g' iscsid.conf"};
                Process m = Runtime.getRuntime().exec(cmd);
                File opensuse = new File("/etc/init.d/iscsid");
                boolean opensuse_exists = opensuse.exists();
                if (opensuse_exists) {
                    Process u = Runtime.getRuntime().exec("chkconfig iscsid on;chkconfig iscsi on");
                }
                File file = new File("/etc/init.d/open-iscsi");
                boolean exists = file.exists();
                if (exists) {
                    Process u = Runtime.getRuntime().exec("update-rc.d open-iscsi enable");
                }
                BufferedReader stdError = new BufferedReader(new InputStreamReader(m.getErrorStream()));
                String s;
                while ((s = stdError.readLine()) != null) {
                    JOptionPane.showMessageDialog(null, "E" + s);
                }
            } else if (Tab1Manually.isSelected() == true) {
                String[] cmd = {"/bin/sh", "-c", "cd /etc/iscsi/ ; sed -i 's/node.startup = automatic/node.startup = manual/g' iscsid.conf "};
                Process m = Runtime.getRuntime().exec(cmd);
                File file = new File("/etc/init.d/open-iscsi");
                boolean exists = file.exists();
                if (exists) {
                    Process u = Runtime.getRuntime().exec("update-rc.d open-iscsi disable");
                } else {
                    Process r = Runtime.getRuntime().exec("chkconfig iscsi off");
                }
                BufferedReader stdError = new BufferedReader(new InputStreamReader(m.getErrorStream()));
                String s;
                while ((s = stdError.readLine()) != null) {
                    JOptionPane.showMessageDialog(null, s);
                }
            }
        } catch (IOException ex) {
            Logger.getLogger(Javaapplication2.class.getName()).log(Level.SEVERE, null, ex);
        }
        FileOutputStream fout;
        try {

            String t, m = "";
            String alltextin1 = "";
            String newname = Tab1InitiatorName.getText();
            if (!newname.equals(oldname)) {
                fout = new FileOutputStream("/etc/iscsi/initiatorname.iscsi");
                new PrintStream(fout).println("InitiatorName=" + newname);
                fout.close();
                File file = new File("/etc/init.d/open-iscsi");
                boolean exists = file.exists();
                if (exists) {
                    Process q = Runtime.getRuntime().exec("service open-iscsi restart");
                    BufferedReader stdqError = new BufferedReader(new InputStreamReader(q.getErrorStream()));
                    while ((t = stdqError.readLine()) != null) {
                        alltextin1 += t + "\n";
                    }
                    if (alltextin1 != "") {
                        JOptionPane.showMessageDialog(null, alltextin1);
                    } else {
                        JOptionPane.showMessageDialog(null, "Service Restared Successfully");
                    }
                } else {
                    Process q = Runtime.getRuntime().exec("service iscsi restart");
                    BufferedReader stdqError = new BufferedReader(new InputStreamReader(q.getErrorStream()));
                    while ((t = stdqError.readLine()) != null) {
                        alltextin1 += t + "\n";
                    }
                    if (alltextin1 != "") {
                        JOptionPane.showMessageDialog(null, alltextin1);
                    } else {
                        JOptionPane.showMessageDialog(null, "Service Restared Successfully");
                    }
                }
            }
            if (delflag != null) {
                JOptionPane.showMessageDialog(null, "Targets Added/Deleted Successfully");
            }
            delflag = null;
            System.exit(WIDTH);
        } catch (IOException ex) {
            Logger.getLogger(Javaapplication2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Tab1OKActionPerformed

    private void Tab3PanelComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_Tab3PanelComponentAdded
        loadlist();
    }//GEN-LAST:event_Tab3PanelComponentAdded

    private void Tab3DeleteTargetsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tab3DeleteTargetsActionPerformed
        try {
            int ippos = index.indexOf(":3260");
            String test = index.substring(0, ippos);

            int iqnpos = index.indexOf("iqn");
            String test1 = index.substring(iqnpos);
            if (index != null) {
                String s, j, alltextin = "", alltextout = "";
                Process p = Runtime.getRuntime().exec("iscsiadm --mode node --targetname " + test1 + " --portal " + test + " --logout");
                BufferedReader stdError = new BufferedReader(new InputStreamReader(p.getErrorStream()));
                BufferedReader stdOutp = new BufferedReader(new InputStreamReader(p.getInputStream()));

                while ((s = stdError.readLine()) != null) {
                    alltextout += s + "\n";
                }
                if (alltextout != "") {
                    JOptionPane.showMessageDialog(null, alltextout);
                } else {
                    Process q = Runtime.getRuntime().exec("iscsiadm --mode node --targetname " + test1 + " --portal " + test + " -o delete");

                    BufferedReader stdqError = new BufferedReader(new InputStreamReader(q.getErrorStream()));
                    String a, b, alltexterr = "", alltextout1 = "";
                    while ((a = stdqError.readLine()) != null) {
                        alltexterr += a + "\n";
                    }
                    if (alltexterr != "") {
                        JOptionPane.showMessageDialog(null, alltexterr);
                        loadlist();
                    }

                    BufferedReader stdqOutp = new BufferedReader(new InputStreamReader(q.getInputStream()));
                    while ((b = stdqOutp.readLine()) != null) {
                        alltexterr += b + "\n";
                    }
                    if (alltextout1 == "") {
                        JOptionPane.showMessageDialog(null, "LUN Deleted Successfully !!");
                        loadlist();
                    } else {
                        JOptionPane.showMessageDialog(null, alltextout1);
                        loadlist();
                    }
                    delflag = "delete";
                }
                index = null;
                //while ((j = stdOutp.readLine()) != null) {alltextin += j + "\n"; }
                //if (alltextin != "") { JOptionPane.showMessageDialog(null, alltextin);loadlist();}
            } else {
                JOptionPane.showMessageDialog(null, "Please Select Atleast one target to delete..");
                loadlist();
            }
        } catch (IOException ex) {
            Logger.getLogger(Javaapplication2.class.getName()).log(Level.SEVERE, null, ex);
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "Please select atleast one Target to delete!!");
            loadlist();
        }
    }//GEN-LAST:event_Tab3DeleteTargetsActionPerformed

    private void Tab3ListTargetsMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_Tab3ListTargetsMouseClicked
        try {
            index = Tab3ListTargets.getSelectedValue().toString();
        } catch (NullPointerException ex) {
            JOptionPane.showMessageDialog(null, "No Connected Targets to select");
            loadlist();
        }
    }//GEN-LAST:event_Tab3ListTargetsMouseClicked

    private void Tab2DiscoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tab2DiscoverActionPerformed
        try {
            String username = jTextField1.getText();
            char password[] = jPasswordField1.getPassword();
            String passwd = "";
            for (int i = 0; i < password.length; i++) {
                passwd = passwd += password[i];
            }
            String s = "", j = "";
            String alltextin = "", alltextout = "";
            if (jCheckBox1.isSelected()) {
                String[] cmm = {"/bin/sh", "-c", "echo \"discovery.sendtargets.auth.authmethod = CHAP\ndiscovery.sendtargets.auth.username = " + username + "\ndiscovery.sendtargets.auth.password = " + passwd + "\" >> /etc/iscsi/iscsid.conf"};
                System.out.println(passwd);
                Process discovery = Runtime.getRuntime().exec(cmm);

                Process p = Runtime.getRuntime().exec("iscsiadm --mode discovery --type sendtargets --portal " + Tab2ServerIP.getText());
                BufferedReader stdError = new BufferedReader(new InputStreamReader(p.getErrorStream()));
                while ((s = stdError.readLine()) != null) {
                    alltextin += s + "\n";
                }
                if (alltextin != "") {
                    JOptionPane.showMessageDialog(null, alltextin);
                }

                BufferedReader stdOutp = new BufferedReader(new InputStreamReader(p.getInputStream()));
                while ((j = stdOutp.readLine()) != null) {
                    alltextout += j + "\n";
                }
                String[] cmd = {"/bin/sh", "-c", "sed -i -e :a -e '$d;N;2,3ba' -e 'P;D' /etc/iscsi/iscsid.conf"};
                Process user = Runtime.getRuntime().exec(cmd);
            } else {
                Process p = Runtime.getRuntime().exec("iscsiadm --mode discovery --type sendtargets --portal " + Tab2ServerIP.getText());
                BufferedReader stdError = new BufferedReader(new InputStreamReader(p.getErrorStream()));
                while ((s = stdError.readLine()) != null) {
                    alltextin += s + "\n";
                }
                if (alltextin != "") {
                    JOptionPane.showMessageDialog(null, alltextin);
                }

                BufferedReader stdOutp = new BufferedReader(new InputStreamReader(p.getInputStream()));
                while ((j = stdOutp.readLine()) != null) {
                    alltextout += j + "\n";
                }
            }
            delflag = "discover";
            if (alltextout != "") {

                loadlist();
                String[] first = alltextout.split("\n");
                //System.out.println(Arrays.toString(first));
                for (int i = 0; i < first.length; i++) {
                    String name = first[i].toString();
                    int iqnpos = name.indexOf("iqn");
                    String targetname = first[i].substring(iqnpos);
                    //Process user = Runtime.getRuntime().exec("iscsiadm --mode node --targetname " + name + " --portal " + ip + " -o update -n node.session.auth.username -v " + username);
                    //Process pass = Runtime.getRuntime().exec("iscsiadm --mode node --targetname " + name + " --portal " + ip + " -o update -n node.session.auth.password -v " + passwd);                      
                    Process p1 = Runtime.getRuntime().exec("iscsiadm --mode node --targetname " + targetname + " --portal " + Tab2ServerIP.getText() + ":3260 --login");
                    BufferedReader stdp1Error = new BufferedReader(new InputStreamReader(p1.getErrorStream()));
                    while ((s = stdp1Error.readLine()) != null) {
                        alltextin += s + "\n";
                    }
                    if (alltextin != "") {
                        JOptionPane.showMessageDialog(null, alltextin);
                    }
                }
                JOptionPane.showMessageDialog(null, "Discovered Targets:\n" + alltextout);
            }
        } catch (IOException ex) {
            Logger.getLogger(Javaapplication2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Tab2DiscoverActionPerformed

    private void Tab2ServerIPKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Tab2ServerIPKeyPressed
        if (evt.getKeyChar() == 46 || evt.getKeyChar() == 8 || evt.getKeyChar() >= 48 && evt.getKeyChar() <= 57) {
        } else {
            JOptionPane.showMessageDialog(null, "Please Enter Valid IP");
        }
    }//GEN-LAST:event_Tab2ServerIPKeyPressed
    public String oldname;
    private void Tab1PanelComponentAdded(java.awt.event.ContainerEvent evt) {//GEN-FIRST:event_Tab1PanelComponentAdded
        try {
            String[] cmm = {"/bin/sh", "-c", "grep -i = /etc/iscsi/initiatorname.iscsi |cut -d = -f2"};
            Process t = Runtime.getRuntime().exec(cmm);
            BufferedReader stdcmmError = new BufferedReader(new InputStreamReader(t.getInputStream()));
            String s;
            while ((s = stdcmmError.readLine()) != null) {
                Tab1InitiatorName.setText(s);
            }
            oldname = Tab1InitiatorName.getText();
            //System.out.println(oldname);
        } catch (IOException ex) {
            Logger.getLogger(Javaapplication2.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_Tab1PanelComponentAdded

    private void Tab1InitiatorNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Tab1InitiatorNameActionPerformed
   }//GEN-LAST:event_Tab1InitiatorNameActionPerformed

    private void jCheckBox1StateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_jCheckBox1StateChanged
        if (jCheckBox1.isSelected()) {
            jTextField1.setEnabled(true);
            jPasswordField1.setEnabled(true);
            jLabel1.setEnabled(true);
            jLabel2.setEnabled(true);
        } else {
            jTextField1.setEnabled(false);
            jPasswordField1.setEnabled(false);
            jLabel1.setEnabled(false);
            jLabel2.setEnabled(false);
        }
    }//GEN-LAST:event_jCheckBox1StateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Javaapplication2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Javaapplication2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Javaapplication2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Javaapplication2.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new Javaapplication2().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTabbedPane AllTabs;
    private javax.swing.JButton Tab1Cancel;
    private javax.swing.JTextField Tab1InitiatorName;
    private javax.swing.JLabel Tab1LabelName;
    private javax.swing.JLabel Tab1LabelService;
    private javax.swing.JRadioButton Tab1Manually;
    private javax.swing.JButton Tab1OK;
    private javax.swing.JPanel Tab1Panel;
    private javax.swing.JPanel Tab1PanelInside;
    private javax.swing.JRadioButton Tab1WhnBooting;
    private javax.swing.JPanel Tab2DiscTargets;
    private javax.swing.JButton Tab2Discover;
    private javax.swing.JLabel Tab2IPLabel;
    private javax.swing.JPanel Tab2InsidePanel;
    private javax.swing.JTextField Tab2Port;
    private javax.swing.JLabel Tab2PortLabel;
    private javax.swing.JTextField Tab2ServerIP;
    private javax.swing.JButton Tab3DeleteTargets;
    private javax.swing.JLabel Tab3LabelList;
    private javax.swing.JList Tab3ListTargets;
    private javax.swing.JPanel Tab3Panel;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPasswordField jPasswordField1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private org.jdesktop.beansbinding.BindingGroup bindingGroup;
    // End of variables declaration//GEN-END:variables
}
